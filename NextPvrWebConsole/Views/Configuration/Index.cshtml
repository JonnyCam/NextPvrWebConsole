@{
    ViewBag.Title = "Configuration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles{
    @Styles.Render("~/Content/configuration/css")
}

<div class="configuration vtab-container">

    <ul class="vtab-buttons">
        <li data-tab="configuration-tab-general" class="first selected"><i class="icon icon-wrench"></i><span data-lang="General" /></li>
        <li data-tab="configuration-tab-devices"><i class="icon icon-cogs"></i><span data-lang="Devices" /></li>
        <li data-tab="configuration-tab-recording"><i class="icon icon-adjust"></i><span data-lang="Recording" /></li>
        <li data-tab="configuration-tab-channelgroups"><i class="icon icon-sitemap"></i><span data-lang="Channel Groups" /></li>
        <li data-tab="configuration-tab-channels"><i class="icon icon-list-ul"></i><span data-lang="Channels" /></li>
        <li data-tab="configuration-tab-users" class="last"><i class="icon icon-group"></i><span data-lang="Users" /></li>
    </ul>
    
    <div class="vtab-content selected" id="configuration-tab-general">
        @{
            var modelGeneral = (NextPvrWebConsole.Models.ConfigurationModels.GeneralConfiguration)ViewBag.GeneralModel;
        }
        @using(Ajax.BeginForm("UpdateGeneral", "Configuration",new AjaxOptions() { OnBegin = "api.onbegin", OnComplete = "api.oncomplete", OnFailure = "api.onfailure", OnSuccess = "api.onsuccess" })) 
        {
            <table>
                <tr class="livetvbuffer">
                    <td class="label" data-lang="Live TV Buffer"></td>
                    <td class="value">
                        @Html.TextBoxFor(m => modelGeneral.LiveTvBufferDirectory, new { @readonly= "readonly" })
                        <button class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" id="btnLiveTvBufferBrowse" onclick="return false">...</button>
                        <span class="description" data-lang="LiveTvBuffer-Description" />
                    </td>
                </tr>
                <tr>
                    <td class="label" data-lang="UpdateDvbEpgDuringLiveTv"></td>
                    <td class="value">
                        @Html.EditorFor(m => modelGeneral.UpdateDvbEpgDuringLiveTv)
                        <span class="description" data-lang="UpdateDvbEpgDuringLiveTv-Description" />
                    </td>
                </tr>
                <tr>
                    <td class="label" data-lang="EpgUpdateHour"></td>
                    <td class="value">
                        @Html.EditorFor(m => modelGeneral.EpgUpdateHour, "HourPicker")
                        @Html.ValidationMessageFor(m => modelGeneral.EpgUpdateHour)
                        <span class="description" data-lang="EpgUpdateHour-Description" />
                    </td>
                </tr>
                <tr>
                    <td class="label"></td>
                    <td class="value">
                        <button class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only">
                            <span class="icon-save icon-large" data-lang="Save"></span>
                        </button>
                    </td>
                </tr>
            </table>
        }
        
    </div>
    <div class="vtab-content" id="configuration-tab-devices">

        <table class="devices">
            <thead>
                <tr>
                    <th class="type" data-lang="Type"></th>
                    <th class="device" data-lang="Device"></th>
                    <th class="present" data-lang="Present"></th>
                    <th class="enabled" data-lang="Enabled"></th>
                    <th class="channels" data-lang="Channels"></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="type">DVB-S</td>
                    <td class="device">TBS 6984 Quad DVB/S2 Tuner A</td>
                    <td class="present">Yes</td>
                    <td class="enabled">Yes</td>
                    <td class="channels">64</td>
                </tr>
                <tr>
                    <td class="type">DVB-S</td>
                    <td class="device">TBS 6984 Quad DVB/S2 Tuner B</td>
                    <td class="present">Yes</td>
                    <td class="enabled">Yes</td>
                    <td class="channels">64</td>
                </tr>
                <tr>
                    <td class="type">DVB-S</td>
                    <td class="device">TBS 6984 Quad DVB/S2 Tuner C</td>
                    <td class="present">Yes</td>
                    <td class="enabled">Yes</td>
                    <td class="channels">64</td>
                </tr>
                <tr>
                    <td class="type">DVB-S</td>
                    <td class="device">TBS 6984 Quad DVB/S2 Tuner D</td>
                    <td class="present">Yes</td>
                    <td class="enabled">Yes</td>
                    <td class="channels">64</td>
                </tr>
                <tr>
                    <td class="type"></td>
                    <td class="device"></td>
                    <td class="present"></td>
                    <td class="enabled"></td>
                    <td class="channels"></td>
                </tr>
            </tbody>
        </table>

        <table>
            <tr>
                <td class="label" data-lang="UseReverseOrderForTv"></td>
                <td class="value">
                    <input type="checkbox" id="UseReverseOrderForTv" value="true" class="{labelOn: 'Yes', labelOff: 'No'}" />
                    <span class="description" data-lang="UseReverseOrderForTv-Description" />
                </td>
            </tr>
            <tr>
                <td class="label"></td>
                <td class="value">
                    <button onclick="return false" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only">
                        <span class="icon-save icon-large" data-lang="Save"></span>
                    </button>
                </td>
            </tr>
        </table>
        
    </div>
    <div class="vtab-content" id="configuration-tab-channelgroups">
        
    </div>
    <div class="vtab-content" id="configuration-tab-channels">
        
    </div>
    <div class="vtab-content" id="configuration-tab-recording">
        @{
            var modelRecording = (NextPvrWebConsole.Models.ConfigurationModels.RecordingConfiguration)ViewBag.RecordingModel;
        }
        <table>
            <tr>
                <td class="label" data-lang="Pre-Padding"></td>
                <td class="value">
                    @Html.EditorFor(m => modelRecording.PrePadding)
                    <span class="description" data-lang="PrePadding-Description" />
                </td>
            </tr>
            <tr>
                <td class="label" data-lang="Post-Padding"></td>
                <td class="value">
                    @Html.EditorFor(m => modelRecording.PostPadding)
                    <span class="description" data-lang="PostPadding-Description" />
                </td>
            </tr>
            <tr>
                <td class="label" data-lang="BlockShutdownWhileRecording"></td>
                <td class="value">
                    @Html.EditorFor(m => modelRecording.BlockShutDownWhileRecording)
                    <span class="description" data-lang="BlockShutdownWhileRecording-Description" />
                </td>
            </tr>
            <tr>
                <td class="label" data-lang="RecurringMatch"></td>
                <td class="value">
                    @Html.EditorFor(m => modelRecording.RecurringMatch, "Enum")
                    <span class="description" data-lang="RecurringMatch-Description" />
                </td>
            </tr>
            <tr>
                <td class="label" data-lang="AvoidDuplicateRecordings"></td>
                <td class="value"> 
                    @Html.EditorFor(m => modelRecording.AvoidDuplicateRecordings)
                    <span class="description" data-lang="AvoidDuplicateRecordings-Description" />
                </td>
            </tr>
            <tr class="recording-directories">
                <td class="label" data-lang="Recording Directories"></td>
                <td class="value">
                    <ul data-bind="foreach: recordingDirectories">
                        <li>
                            <div class="controls">
                                <button onclick="return false" class="ui-button-danger ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" data-bind="click: $root.remove">
                                    <span class="icon-remove icon-large" data-lang="Remove"></span>
                                </button>
                            </div>
                            <input type="radio" name="recording-directory-default" data-bind="attr: { id : 'recording-directory-default-' + $index() }, value:$index, checked: $root.selectedDefault" />
                            <label data-bind="attr: { for : 'recording-directory-default-' + $index() }">
                                <span class="name" data-bind="text: name"></span>
                                <span class="path" data-bind="text: path"></span>
                            </label>
                        </li>
                    </ul>    
                    <button class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" data-bind="click: add">
                        <span class="icon-plus icon-large" data-lang="Add Recording Folder"></span>
                    </button>                
                </td>
            </tr>
            <tr>
                <td class="label"></td>
                <td class="value">
                    <button id="btnRecordingsSave" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only">
                        <span class="icon-save icon-large" data-lang="Save"></span>
                    </button>
                </td>
            </tr>
        </table>
    </div>

</div>


<div id="FolderBrowserWindow" style="display:none">
    @Html.Partial("FileTree")
</div>


@section Scripts{
    <script>
        var recordingDirectories = new Array();
        $(function(){
        @foreach(var rd in modelRecording.RecordingDirectories)
        {
            <text>recordingDirectories.push(new RecordingDirectory( { Oid: @rd.Oid, Name: "@rd.Name", Path: "@rd.Path.Replace(@"\", @"\\")", IsDefault: @rd.IsDefault.ToString().ToLower() }) );</text>
        }
        });
    </script>

    @Scripts.Render("~/Scripts/configuration/js")
    @Scripts.Render("/Scripts/jquery.filetree.js")
}